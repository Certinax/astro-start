---
import type { HTMLAttributes } from 'astro/types';

type Props = HTMLAttributes<'a'>;

const { href, class: className, ...props } = Astro.props;

// Resolve internal links using Astro.resolve()
const finalHref = href;
const base = import.meta.env.BASE_URL || '/';
const pathname = Astro.url.pathname.startsWith(base)
	? Astro.url.pathname.slice(base.length - 1)
	: Astro.url.pathname;
const subpath = pathname.match(/[^\/]+/g);
const isActive = href === pathname || href === '/' + (subpath?.[0] || '');
---

<a href={finalHref} class:list={[className, { active: isActive }]} {...props}>
	<slot />
</a>
<style>
	a {
		display: inline-block;
		text-decoration: none;
	}
	a.active {
		font-weight: bolder;
		text-decoration: underline;
	}
</style>
